#!/usr/bin/env bash
#
# Vim build script.
#
# NOTE: Work correctly on Linux. Building maybe success on macOS, but builded
# vim will be break. Especially, the vim can not find external interpreters.
#

set -Ceuo pipefail

cmdpath () {
  command -v "$1"
}

has () {
  cmdpath "$1" &>/dev/null
}

is_macos () {
  [[ "$OSTYPE" =~ ^darwin ]]
}

sudo::proxy () {
  if is_macos; then
    "$@"
  else
    sudo "$@"
  fi
}

nproc::proxy () {
  if is_macos; then
    sysctl -n hw.ncpu
  elif has nproc; then
    nproc
  else
    echo 1
  fi
}

readonly VIM_REPO_PATH="${VIM_REPO_PATH:-$(ghq list --full-path --exact 'vim/vim')}"
readonly CONFIG_CACHE='src/auto/config.cache'

cd "$VIM_REPO_PATH"

if [[ -f "$CONFIG_CACHE" ]]; then
  sudo::proxy make --quiet uninstall
  git fetch -v
  git switch -d origin/master
fi

export CFLAGS='-g -O2 -march=native -Wall -Wshadow -Wmissing-prototypes'
export CPPFLAGS="$CFLAGS"

declare -a opts=(
  --quiet
  --disable-gui
  --enable-fail-if-missing
)

if is_macos; then
  if has python3; then
    opts+=(
      --enable-python3interp
      --with-python3-command="$(cmdpath python3)"
    )
  fi

  if has lua; then
    declare prefix
    prefix="$(cmdpath lua)"
    prefix="${prefix%/bin/lua}"

    opts+=(
      --enable-luainterp
      --with-lua-prefix="$prefix"
    )

    unset prefix
  fi
else
  if has python3; then
    opts+=(--enable-python3interp=dynamic)
  fi

  if has lua; then
    opts+=(--enable-luainterp=dynamic)
  fi
fi

./configure "${opts[@]}"

make --quiet --jobs="$(nproc::proxy)"
sudo::proxy make --quiet install

echo
vim --version | head -n 2
