#!/usr/bin/env bash
#
# Vim build script.
#
# NOTE: Work correctly on Linux. Building maybe success on macOS, but builded
# vim will be break. Especially, the vim can not find external interpreters.
#

set -Ceuo pipefail

wrap () {
  local left=$1
  local right=$2

  echo -n -e "$left"
  while read -r; do
    echo -e "$REPLY"
  done
  echo -n -e "$right"
}

warning () {
  wrap '\033[33m' '\033[0m' <<<"$*" >&2
}

error () {
  wrap '\033[31m' '\033[0m' <<<"$*" >&2
}

cmdpath () {
  command -v "$1"
}

has () {
  cmdpath "$1" &>/dev/null
}

is_macos () {
  [[ $OSTYPE =~ ^darwin ]]
}

nproc::proxy () {
  if is_macos; then
    sysctl -n hw.ncpu
  elif has nproc; then
    nproc
  else
    echo 1
  fi
}

declare -i with_lua=0
declare -i with_python=0
declare -i with_gui=0
declare -i latest=0
declare -i force=0

while (( $# )); do
  case "$1" in
    --with-lua )
      with_lua=1
      shift
      ;;
    --with-python )
      with_python=1
      shift
      ;;
    --with-gui )
      with_gui=1
      shift
      ;;
    --latest )
      latest=1
      shift
      ;;
    -f | --force )
      force=1
      shift
      ;;
    -h | --help )
      echo -n "\
Descriptions:
  A build helper for Vim.

Usages:
  build <options...>

Options:
  --with-lua
  --with-python
  --with-gui
  --latest
  -f, --force
  -h, --help
"
      exit 0
      ;;
    * )
      error "An unknown option: $1."
      exit 1
      ;;
  esac
done

VIM_REPO_PATH=${VIM_REPO_PATH:-$(ghq list --full-path --exact vim/vim)}
readonly VIM_REPO_PATH
readonly CONFIG_CACHE=src/auto/config.cache

cd "$VIM_REPO_PATH"

if [[ -f $CONFIG_CACHE ]]; then
  sudo make --quiet uninstall
fi

if [[ -f $CONFIG_CACHE && $force -ge 1 ]]; then
  make distclean
fi

if (( latest )); then
  # Prefer to upstream if it exists.
  if git remote get-url upstream &>/dev/null; then
    git fetch -v upstream
    git switch -d upstream/master
  else
    git fetch -v origin
    git switch -d origin/master
  fi
fi

declare -a opts=(
  --quiet
  --enable-fail-if-missing
)

if ! (( with_gui )); then
  opts+=(--disable-gui)
fi

if (( with_lua )); then
  if has lua; then
    if is_macos; then
      declare prefix
      prefix=$(cmdpath lua)
      prefix=${prefix%/bin/lua}

      opts+=(
        --enable-luainterp
        --with-lua-prefix="$prefix"
      )

      unset prefix
    else
      opts+=(--enable-luainterp=dynamic)
    fi
  else
    warning 'Not found: A lua executable.'
  fi
fi

if (( with_python )); then
  if has python3; then
    if is_macos; then
      opts+=(
        --enable-python3interp
        --with-python3-command="$(cmdpath python3)"
      )
    else
      opts+=(--enable-python3interp=dynamic)
    fi
  else
    warning 'Not found: A python3 executable.'
  fi
fi

export CFLAGS=${CFLAGS:--O2 -march=native}

./configure "${opts[@]}"

njob=$(nproc::proxy)
make --quiet --jobs="$njob"
sudo make --quiet install

echo
vim --version | head -n 2
