#!/usr/bin/env bash
#
# An extended vim command as a wrapper, not a X11 Vim.
#

set -euo pipefail

has () {
  type "$1" &>/dev/null
}

if (( $# )); then
  exec vim "$@"
fi

if [[ -z ${VIM-=:} ]]; then
  exec vim
fi

# On an old bash, for example 3.2.57(1)-release on macOS Ventura 13.3.1, the
# variable expansion with an empty array throws "unbound variable" error if
# "-u" option is on. So we have to put one element into the array at least.
declare -a words=(vim)

if command vim --version | grep -q +clientserver; then
  words+=(--servername VIM)
fi

if has dtach; then
  if has tput; then
    tput smcup
  fi

  dtach -A ~/.vim/.dtach.sock -r winch "${words[@]}"

  if has tput; then
    tput rmcup
  fi
else
  exec "${words[@]}"
fi
